{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { GET_PLAYER_SUCCESS, GET_PLAYER_FAIL } from \"../actions/actionTypes\";\nconst statsURL = 'https://nba-players.herokuapp.com/players-stats/';\nconst imageURL = 'https://nba-players.herokuapp.com/players/';\nconst statsWeWant = ['points_per_game', 'assists_per_game', 'blocks_per_game', 'three_point_percentage', 'field_goal_percentage', 'rebounds_per_game', 'blocks_per_game', 'free_throw_percentage', 'minutes_per_game', 'steals_per_game', 'player_efficiency_rating'];\n\nfunction fetchPlayerData(firstName, surname) {\n  let url = `${statsURL}${surname}/${firstName}`;\n  return axios.get(url);\n}\n\nexport function* retrievePlayer(action) {\n  let {\n    firstName,\n    surname\n  } = action.payload;\n\n  try {\n    // grab the data from the players heroku api\n    let response = yield call(fetchPlayerData, firstName, surname); // if a player is found and returned to us\n\n    if (response.data.name) {\n      let image = `${imageURL}${surname}/${firstName}`;\n      let stats = []; // loop over keys in data\n\n      for (let key in response.data) {\n        // if key matches one of the stats we want\n        if (statsWeWant.includes(key)) {\n          // assign it to our stats variable\n          stats.push({\n            label: key,\n            value: response.data[key]\n          });\n        }\n      }\n\n      let playerProfile = { ...response.data,\n        stats,\n        image\n      };\n      yield put({\n        type: GET_PLAYER_SUCCESS,\n        payload: playerProfile\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: GET_PLAYER_FAIL,\n      payload: e\n    });\n  }\n}","map":{"version":3,"sources":["/Users/Hayden007/Desktop/react-projects/nba-app/src/store/sagas/player.js"],"names":["put","call","axios","GET_PLAYER_SUCCESS","GET_PLAYER_FAIL","statsURL","imageURL","statsWeWant","fetchPlayerData","firstName","surname","url","get","retrievePlayer","action","payload","response","data","name","image","stats","key","includes","push","label","value","playerProfile","type","e"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,kBADJ,EAEIC,eAFJ,QAGO,wBAHP;AAKA,MAAMC,QAAQ,GAAG,kDAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;AAEA,MAAMC,WAAW,GAAG,CAChB,iBADgB,EAEhB,kBAFgB,EAGhB,iBAHgB,EAIhB,wBAJgB,EAKhB,uBALgB,EAMhB,mBANgB,EAOhB,iBAPgB,EAQhB,uBARgB,EAShB,kBATgB,EAUhB,iBAVgB,EAWhB,0BAXgB,CAApB;;AAcA,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6C;AACzC,MAAIC,GAAG,GAAI,GAAEN,QAAS,GAAEK,OAAQ,IAAGD,SAAU,EAA7C;AAEA,SAAOP,KAAK,CAACU,GAAN,CACHD,GADG,CAAP;AAGH;;AAED,OAAO,UAAUE,cAAV,CAAyBC,MAAzB,EAAiC;AACpC,MAAI;AAAEL,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBI,MAAM,CAACC,OAApC;;AACA,MAAI;AACA;AACA,QAAIC,QAAQ,GAAG,MAAMf,IAAI,CAACO,eAAD,EAAkBC,SAAlB,EAA6BC,OAA7B,CAAzB,CAFA,CAIA;;AACA,QAAIM,QAAQ,CAACC,IAAT,CAAcC,IAAlB,EAAwB;AACpB,UAAIC,KAAK,GAAI,GAAEb,QAAS,GAAEI,OAAQ,IAAGD,SAAU,EAA/C;AACA,UAAIW,KAAK,GAAG,EAAZ,CAFoB,CAIpB;;AACA,WAAK,IAAIC,GAAT,IAAgBL,QAAQ,CAACC,IAAzB,EAA+B;AAC3B;AACA,YAAIV,WAAW,CAACe,QAAZ,CAAqBD,GAArB,CAAJ,EAA+B;AAC3B;AACAD,UAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,YAAAA,KAAK,EAAEH,GAAT;AAAcI,YAAAA,KAAK,EAAET,QAAQ,CAACC,IAAT,CAAcI,GAAd;AAArB,WAAX;AACH;AACJ;;AAED,UAAIK,aAAa,GAAG,EAChB,GAAGV,QAAQ,CAACC,IADI;AAEhBG,QAAAA,KAFgB;AAGhBD,QAAAA;AAHgB,OAApB;AAKA,YAAMnB,GAAG,CAAC;AAAE2B,QAAAA,IAAI,EAAExB,kBAAR;AAA4BY,QAAAA,OAAO,EAAEW;AAArC,OAAD,CAAT;AACH;AAEJ,GA1BD,CA0BE,OAAOE,CAAP,EAAU;AACR,UAAM5B,GAAG,CAAC;AAAE2B,MAAAA,IAAI,EAAEvB,eAAR;AAAyBW,MAAAA,OAAO,EAAEa;AAAlC,KAAD,CAAT;AACH;AACJ","sourcesContent":["import { put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport {\n    GET_PLAYER_SUCCESS,\n    GET_PLAYER_FAIL\n} from \"../actions/actionTypes\";\n\nconst statsURL = 'https://nba-players.herokuapp.com/players-stats/';\nconst imageURL = 'https://nba-players.herokuapp.com/players/';\n\nconst statsWeWant = [\n    'points_per_game',\n    'assists_per_game',\n    'blocks_per_game',\n    'three_point_percentage',\n    'field_goal_percentage',\n    'rebounds_per_game',\n    'blocks_per_game',\n    'free_throw_percentage',\n    'minutes_per_game',\n    'steals_per_game',\n    'player_efficiency_rating'\n]\n\nfunction fetchPlayerData(firstName, surname) {\n    let url = `${statsURL}${surname}/${firstName}`;\n\n    return axios.get(\n        url\n    );\n}\n\nexport function* retrievePlayer(action) {\n    let { firstName, surname } = action.payload;\n    try {\n        // grab the data from the players heroku api\n        let response = yield call(fetchPlayerData, firstName, surname);\n\n        // if a player is found and returned to us\n        if (response.data.name) {\n            let image = `${imageURL}${surname}/${firstName}`;\n            let stats = [];\n\n            // loop over keys in data\n            for (let key in response.data) {\n                // if key matches one of the stats we want\n                if (statsWeWant.includes(key)) {\n                    // assign it to our stats variable\n                    stats.push({ label: key, value: response.data[key] })\n                }\n            }\n\n            let playerProfile = {\n                ...response.data,\n                stats,\n                image\n            }\n            yield put({ type: GET_PLAYER_SUCCESS, payload: playerProfile });\n        }\n\n    } catch (e) {\n        yield put({ type: GET_PLAYER_FAIL, payload: e });\n    }\n}"]},"metadata":{},"sourceType":"module"}